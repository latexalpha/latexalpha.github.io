{"posts":[{"title":"基于 Alist 和 RaiDrive 挂载云盘到本地","text":"本文首先介绍了基于 Alist 进行多个云盘管理，然后介绍了基于 RaiDrive 挂载云盘到本地的过程，最后介绍了基于 PowerShell 脚本自动化挂载的操作。 Alist 管理多个云盘Alist文档 Alist 使用指南 第一步：安装本文介绍 Windows 系统下最新版 Alist 使用方法，其他系统请参考 Alist 文档。 Alist 手动安装 1234567# 下载 Alistunzip alist-xxxx.zip # 解压下载的文件，得到可执行文件# 第一次启用时需要设置密码，然后登录.\\alist.exe admin random # 随机生成密码.\\alist.exe admin set NEW_PASSWORD # # 手动设置一个密码 `NEW_PASSWORD`是指你需要设置的密码# 下次直接启用，使用设置的密码登录.\\alist.exe server # 启动 Alist 服务 安装完之后在浏览器登录：http://127.0.0.1:5244/@login. 第二步：添加云盘登录完成后点击底部 Manage/管理 按钮，进入管理界面。 从左侧的 Storages 导航进入添加云盘界面，添加自己的云盘，下面是一些需要注意的设置项： Driver: 选择云盘类型，这里选择 AliyunDriveOpen，即阿里云盘； Mount Path: 设置挂载路径，这里设置为 阿里云盘，即在 Alist 界面中显示的云盘名称； WebDAV policy: 设置 WebDAV 策略，这里选择 native proxy，即使用 Alist 自带的 WebDAV 代理； Refresh Token: 设置阿里云盘的 Refresh Token，这里使用 Alist 提供的工具 获取； Order by: 设置排序方式，这里选择 name，即按照名称排序； Order direction: 设置排序方向，这里选择 asc，即升序排列。 设置完成后启用服务然后登录即可以看到添加的云盘，点击云盘名称即可进入云盘。 Alist 使用指南：添加阿里云盘Open RaiDrive 挂载云盘到本地RaiDrive 官网 RaiDrive 说明文档 点击添加，选择 NAS 选项，然后选择 WebDAV； 进行如下设置：取消选择地址，设置地址和端口为 Alist 服务的地址和端口，这里是 http://127.0.0.1和5244，然后输入 Alist 设置的 admin 密码，点击确定即可。 PowerShell 脚本自动化挂载利用 PowerShell 脚本自动化挂载云盘到本地有两个理由： 由于每次关机之后 Alist 服务会停止，所以需要每次开机后手动启动 Alist 服务； RaiDrive 可以设置自动启动，但是会有广告弹窗，且自启动的方式不是我喜欢的模式。 123456Set-Location -Path &quot;Path to alist.exe&quot; # need to change directory to where the alist.exe is locatedWrite-Host &quot;Current directory is: $pwd&quot;Write-Host &quot;Launch RaiDrive...&quot;Start-Process -FilePath &quot;Path to RaiDrive.exe&quot; # need to change directory to where the RaiDrive.exe is locatedWrite-Host &quot;Launch Alist server...&quot;.\\alist.exe server 将以上代码保存为 alist.ps1，并将其路径添加到 PowerShell $PROFILE 中，即可以在 Terminal 中自动化挂载。","link":"/e24cbdc907f5/"},{"title":"基于 Hexo 和 GitHub 搭建个人博客","text":"本文首先介绍了 Hexo 的安装， 然后介绍了 GitHub Pages 的设置，最后介绍了一些主题自定义的内容。 Hexo 安装Hexo 官网 Hexo 说明文档 前置条件 安装 Node.js 并了解 npm 相关基础知识； 安装 git 并了解其基本使用方法。 安装 Hexo12345npm install hexo-cli -g # 安装 Hexohexo init blog # blog 为博客项目根目录cd blognpm installhexo server # 启动服务 GitHub Pages 设置GitHub Pages | Hexo GitHub SSH 连接配置好 SSH 连接后，就可以使用 SSH 协议来连接 GitHub。 新建 GitHub Repo创建仓库新建一个名为 username.github.io 的仓库，最后博客的访问地址就是 http://username.github.io. 修改 config 文件中的 deploy 方式这里采用 Hexo 说明文档中的 One-command Deployment 方式，即一键部署，需要修改 _config.yml 文件中的 deploy 部分和安装 hexo-deployer-git 插件。 1234deploy: type: git repository: git@github.com: username/username.github.io.git branch: main 1npm install hexo-deployer-git –save 博客撰写与发布 新建文章 12hexo new post &quot;about&quot; # 新建关于页面hexo new &quot;My New Post&quot; # 新建文章 生成静态文件 1hexo generate 发布 1hexo deploy 添加多个标签： 123tags: - tag 1 - tag 2 添加分类： 123categories: - category 1 - category 2 添加目录： 1toc: true # 在文章中添加目录 主题自定义主页三栏、文章页两栏新建一个_config.post.yml文件，内容如下： ~\\blog\\_config.post.yml123456789101112131415161718192021222324252627282930313233widgets: # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: archives # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: categories # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: tags # How to order tags. For example 'name' to order by name in ascending order, and '-length' to order by number of posts in each tags in descending order order_by: name # Amount of tags to show. Will show all if not set. amount: # Whether to show tags count, i.e. number of posts in the tag. show_count: true # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: toc # Whether to show the index of each heading index: false # Whether to collapse sub-headings when they are out-of-view collapsed: false # Maximum level of headings to show (1-6) depth: 4 调整两栏的宽度： 在 layout.jsx 中作如下修改：强制双栏显示的页面宽度为三栏的宽度，即 is-3-column。 ~\\blog\\node_modules\\hexo-theme-icarus\\layout\\layout.jsx1234 &lt;Head site={site} config={config} helper={helper} page={page} /&gt;- &lt;body class={`is-${columnCount}-column`}&gt;+ &lt;body class={`is-3-column`}&gt; &lt;Navbar config={config} helper={helper} page={page} /&gt; 然后在 layout.jsx 和 widgets.jsx 中修改 columnCount 的值，需要保证二者之和为 12。 ~\\blog\\node_modules\\hexo-theme-icarus\\layout\\layout.jsx1234 'is-12': columnCount === 1,- 'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,+ 'is-8-tablet is-8-desktop is-9-widescreen': columnCount === 2, 'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3 ~\\blog\\node_modules\\hexo-theme-icarus\\layout\\common\\widgets.jsx12345678 function getColumnSizeClass(columnCount) { switch (columnCount) { case 2:- return 'is-4-tablet is-4-desktop is-4-widescreen';+ return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-3-widescreen'; } 目录粘性定位在 main.js 中添加如下一行： ~\\blog\\node_modules\\hexo-theme-icarus\\source\\js\\main.js123 if ($toc.length &gt; 0) {+ $toc.addClass('column-right is-sticky'); # 和自己的 widget 的位置对应 const $mask = $('&lt;div&gt;'); 在 widget.styl 中添加如几行： ~\\blog\\node_modules\\hexo-theme-icarus\\include\\style\\widget.styl123+#toc+ max-height: calc(100vh - 22px)+ overflow-y: scroll 所有图片居中显示在 article.styl 中添加如下四行： ~\\blog\\node_modules\\hexo-theme-icarus\\include\\style\\article.styl1234567 footer strong + cite margin-left: .5em+ a+ img+ margin: auto+ display: block Footer 高度修改新建一个自定义的 style 文件，内容如下： ~\\blog\\node_modules\\hexo-theme-icarus\\include\\style\\custom.styl123.footer background-color rgba(255,255,255,0.7) padding 1.5rem 1.5rem 1.5rem 在 style.styl 中引入： ~\\blog\\node_modules\\hexo-theme-icarus\\source\\css\\style.styl12 @import '../../include/style/responsive'+ @import '../../include/style/ZSY_custom' Icarus 主题自定义 主题说明文档-常见问题","link":"/97a0e81144b5/"}],"tags":[{"name":"Alist","slug":"Alist","link":"/tags/Alist/"},{"name":"RaiDrive","slug":"RaiDrive","link":"/tags/RaiDrive/"},{"name":"PowerShell","slug":"PowerShell","link":"/tags/PowerShell/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"}],"categories":[{"name":"经验积累","slug":"经验积累","link":"/categories/%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF/"}],"pages":[{"title":"资源收集","text":"Learning Resources Cite Description CS 自学指南 CS 自学指南 AI 算法工程时手册 AI 算法工程师手册 GitHub Repos Repo Description CS Self Learning CS 自学指南 Resources Sites Cite Description 易搜 网盘导航 七米蓝 Alist 大量书籍、影视和音乐资源 微资源 Alist 大量电子书资源","link":"/about/index.html"}]}